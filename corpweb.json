{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "HW1 GDA Corpweb",
	"Parameters": {
		"InstanceType": {
			"Description": "Server Instance Type",
			"Type": "String",
			"Default": "t2.micro",
			"AllowedValues": [
				"t2.micro",
				"t2.small"
			],
			"ConstraintDescription": "Must be a valid EC2 type"
		},
		"KeyPair": {
			"Description": "Name of your EC2 keypair to enable ssh access",
			"Type": "AWS::EC2::KeyPair::KeyName",
			"ConstraintDescription": "Must be the name of an existing KeyPair"
		},
		"YourIP": {
			"Description": "Current IP address of your workstation (x.x.x.x/32)",
			"Type": "String"
		}
	},
	"Resources": {
		"EngineeringVPC": {
			"Type": "AWS::EC2::VPC",
			"Properties": {
				"EnableDnsSupport": "true",
				"EnableDnsHostnames": "true",
				"CidrBlock": "10.0.0.0/16",
				"Tags": [
					{
						"Key": "Environment",
						"Value": "Test"
					}
				]
			}
		},
		"InternetGateway": {
			"Type": "AWS::EC2::InternetGateway",
			"Properties": {}
		},
		"VPCGatewayAttachment": {
			"Type": "AWS::EC2::VPCGatewayAttachment",
			"Properties": {
				"InternetGatewayId": {
					"Ref": "InternetGateway"
				},
				"VpcId": {
					"Ref": "EngineeringVPC"
				}
			}
		},
		"PublicRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "EngineeringVPC"
				}
			}
		},
		"PublicRoute": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "InternetGateway"
				},
				"RouteTableId": {
					"Ref": "PublicRouteTable"
				}
			}
		},
		"PublicSubnet1": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"AvailabilityZone": {
					"Fn::Select": [
						"0",
						{
							"Fn::GetAZs": {
								"Ref": "AWS::Region"
							}
						}
					]
				},
				"CidrBlock": "10.0.0.0/24",
				"MapPublicIpOnLaunch": "true",
				"Tags": [
					{
						"Key": "Name",
						"Value": "Website-Public-Subnet1"
					}
				],
				"VpcId": {
					"Ref": "EngineeringVPC"
				}
			}
		},
		"Publicsubnet1rtassoc": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"RouteTableId": {
					"Ref": "PublicRouteTable"
				},
				"SubnetId": {
					"Ref": "PublicSubnet1"
				}
			}
		},
		"PublicSubnet2": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"AvailabilityZone": {
					"Fn::Select": [
						"1",
						{
							"Fn::GetAZs": {
								"Ref": "AWS::Region"
							}
						}
					]
				},
				"CidrBlock": "10.0.1.0/24",
				"MapPublicIpOnLaunch": "true",
				"Tags": [
					{
						"Key": "Name",
						"Value": "Website-Public-Subnet2"
					}
				],
				"VpcId": {
					"Ref": "EngineeringVPC"
				}
			}
		},
		"Publicsubnet2rtassoc": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"RouteTableId": {
					"Ref": "PublicRouteTable"
				},
				"SubnetId": {
					"Ref": "PublicSubnet2"
				}
			}
		},
		"web1": {
			"Type": "AWS::EC2::Instance",
			"Properties": {
				"ImageId": "ami-0440d3b780d96b29d",
				"InstanceType": {
					"Ref": "InstanceType"
				},
				"KeyName": {
					"Ref": "KeyPair"
				},
				"SecurityGroupIds": [
					{
						"Ref": "WebserversSG"
					}
				],
				"SubnetId": {
					"Ref": "PublicSubnet1"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": "WebServer1"
					}
				],
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": [
							"\n",
							[
								"#!/bin/bash",
								"yum update -y",
								"yum install -y git httpd php",
								"service httpd start",
								"chkconfig httpd on",
								"aws s3 cp s3://seis665-public/index.php /var/www/html/"
							]
						]
					}
				}
			}
		},
		"web2": {
			"Type": "AWS::EC2::Instance",
			"Properties": {
				"ImageId": "ami-0440d3b780d96b29d",
				"InstanceType": {
					"Ref": "InstanceType"
				},
				"KeyName": {
					"Ref": "KeyPair"
				},
				"SecurityGroupIds": [
					{
						"Ref": "WebserversSG"
					}
				],
				"SubnetId": {
					"Ref": "PublicSubnet2"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": "WebServer2"
					}
				],
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": [
							"\\n",
							[
								"#!/bin/bash",
								"yum update -y",
								"yum install -y git httpd php",
								"service httpd start",
								"chkconfig httpd on",
								"aws s3 cp s3://seis665-public/index.php /var/www/html/"
							]
						]
					}
				}
			}
		},
		"WebserversSG": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": "Security group rules for webserver host.",
				"SecurityGroupIngress": [
					{
						"IpProtocol": "tcp",
						"FromPort": 80,
						"ToPort": 80,
						"CidrIp": "0.0.0.0/0"
					},
					{
						"IpProtocol": "tcp",
						"FromPort": 22,
						"ToPort": 22,
						"CidrIp": {
							"Ref": "YourIP"
						}
					}
				],
				"VpcId": {
					"Ref": "EngineeringVPC"
				}
			}
		},
		"EngineeringLB": {
			"Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
			"Properties": {
				"Subnets": [
					{
						"Ref": "PublicSubnet1"
					},
					{
						"Ref": "PublicSubnet2"
					}
				],
				"SecurityGroups": [{ "Ref": "WebserversSG" }]
		}
	},
		"EngineeringLBListener": {
			"Type": "AWS::ElasticLoadBalancingV2::Listener",
			"Properties": {
				"DefaultActions": [
					{
						"Type": "forward",
						"TargetGroupArn": {
							"Ref": "EngineeringWebservers"
						}
					}
				],
				"LoadBalancerArn": {
					"Ref": "EngineeringLB"
				},
				"Port": "80",
				"Protocol": "HTTP"
			}
		},
		"EngineeringWebservers": {
			"Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
			"Properties": {
				"HealthCheckEnabled": true,
				"HealthCheckPath": "/",
				"HealthCheckPort": "80",
				"HealthCheckProtocol": "HTTP",
				"Port": 80,
				"Protocol": "HTTP",
				"Targets": [
					{
						"Id": {
							"Ref": "web1"
						}
					},
					{
						"Id": {
							"Ref": "web2"
						}
					}
				],
				"VpcId": {
					"Ref": "EngineeringVPC"
				}
			}
		}
	},
	"Outputs": {
		"WebUrl": {
			"Description": "The DNS name for EngineeringLB",
			"Value": {
				"Fn::GetAtt": [
					"EngineeringLB",
					"DNSName"
				]
			}
		}
	}
}